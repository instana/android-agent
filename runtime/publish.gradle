apply plugin: 'maven-publish'
apply plugin: 'signing'

ext.lib_version = "$agent_version"
ext.lib_artifact_id = "android-agent-runtime"

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}
task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
}
task androidJavadocsJar(type: Jar) {
    archiveClassifier.set('javadoc')
    from androidJavadocs.destinationDir
}

afterEvaluate {
    publishing {
        publications {
            mavenAar(MavenPublication) {
                groupId = "$lib_group_id"
                artifactId = "$lib_artifact_id"
                version = "$lib_version"

                pom {
                    name = 'Instana - Android Agent'
                    description = 'Gather end-user Android app performance data'
                    url = 'https://github.com/instana/android-agent'

                    organization {
                        name = 'Instana Inc.'
                        url = 'https://www.instana.com'
                    }
                    developers {
                        developer {
                            name = 'Mikel Pascual'
                            email = 'mikel.pascual@external.instana.com'
                            url = 'https://www.instana.com'
                        }
                    }
                    licenses {
                        license {
                            name = 'The MIT License'
                            url = 'https://github.com/instana/android-agent/blob/master/LICENSE'
                        }
                    }

                    scm {
                        connection = 'scm:git:git://github.com/instana/android-agent.git'
                        developerConnection = 'scm:git:ssh://git@github.com:instana/android-agent.git'
                        url = 'https://github.com/instana/android-agent'
                    }
                }

                repositories {
                    maven {
                        name = 'Sonatype'
                        url = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
                        credentials {
                            try {
                                def props = new Properties()
                                props.load(new FileInputStream("$rootDir/publish.properties"))
                                username = props['authentication.ossrh.username']
                                password = props['authentication.ossrh.password']
                            } catch (Exception e) {
                                logger.warn('Will not publish: missing OSSRH credentials')
                            }
                        }
                    }
                }

                from components.release
                artifact tasks.androidJavadocsJar
                artifact tasks.androidSourcesJar
            }
        }
    }
}

signing {
    def props = new Properties()
    def file = new File("$rootDir/publish.properties")

    if (file.exists()) {
        props.load(new FileInputStream("$rootDir/publish.properties"))
        // def signingKeyId = props['signing.keyId']
        def signingKey = (new File(props['signing.file.secretASCIIArmoredKey'])).text
        def signingPassword = (new File(props['signing.file.password'])).text.trim()
        // useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)
        useInMemoryPgpKeys(signingKey, signingPassword)
    } else {
        logger.warn('Signing will be skipped: invalid signing config')
        required false
    }

    sign publishing.publications
}
