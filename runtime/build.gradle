apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.archinamon.aspectj-ext'
apply plugin: 'digital.wup.android-maven-publish'
apply plugin: 'com.jfrog.bintray'

ext.lib_version = "$agent_version"
ext.lib_group_id = "com.instana"
ext.lib_artifact_id = "android-agent-runtime"

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "$agent_version"

        buildConfigField 'String', 'AGENT_VERSION_NAME', "\"$agent_version\""
        buildConfigField "int", "MIN_SDK_VERSION", "$minSdkVersion.apiLevel"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'proguard-rules.pro'
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

repositories {
    google()
    jcenter()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.work:work-runtime-ktx:2.4.0'
    implementation 'com.squareup.okhttp3:okhttp:3.12.12'

    testImplementation 'junit:junit:4.13'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'androidx.test:core:1.3.0'
    testImplementation 'androidx.work:work-testing:2.4.0'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
    testImplementation 'org.mockito:mockito-inline:3.4.6'
    testImplementation 'org.robolectric:robolectric:4.4'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}
task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
}
task androidJavadocsJar(type: Jar) {
    archiveClassifier.set('javadoc')
    from androidJavadocs.destinationDir
}
publishing {
    publications {
        mavenAar(MavenPublication) {
            groupId = "$lib_group_id"
            artifactId = "$lib_artifact_id"
            version = "$lib_version"

            from components.android
            artifact tasks.androidJavadocsJar
            artifact tasks.androidSourcesJar
        }
    }
}
bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')
    publications = ['mavenAar']
    pkg {
        repo = 'public-maven'
        name = "$lib_artifact_id"
        userOrg = 'instana'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/instana/android-agent'
        version {
            name = "$lib_version"
            released = new Date()
        }
        publish = true
    }
}
